{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ class $a5fd07fa01589658$var$Game {\n    static gameStatus = {\n        idle: \"idle\",\n        playing: \"playing\",\n        win: \"win\",\n        lose: \"lose\"\n    };\n    constructor(initialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ]){\n        this.grid = initialState;\n        this.score = 0;\n        this.status = $a5fd07fa01589658$var$Game.gameStatus.idle;\n    }\n    getState() {\n        return this.grid;\n    }\n    getScore() {\n        return this.score;\n    }\n    getStatus() {\n        return this.status;\n    }\n    start() {\n        this.status = $a5fd07fa01589658$var$Game.gameStatus.playing;\n        this.addRandomTile();\n        this.addRandomTile();\n        this.renderBoard();\n    }\n    restart() {\n        this.grid = [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.score = 0;\n        this.status = $a5fd07fa01589658$var$Game.gameStatus.idle;\n        this.renderBoard();\n    }\n    addRandomTile() {\n        const emptyCells = [];\n        for(let row = 0; row < 4; row++){\n            for(let col = 0; col < 4; col++)if (this.grid[row][col] === 0) emptyCells.push({\n                row: row,\n                col: col\n            });\n        }\n        if (emptyCells.length === 0) return;\n        const randomIndex = Math.floor(Math.random() * emptyCells.length);\n        const { row: randomRow, col: randomCol } = emptyCells[randomIndex];\n        const randomValue = Math.random();\n        if (randomValue < 0.9) this.grid[randomRow][randomCol] = 2;\n        else this.grid[randomRow][randomCol] = 4;\n    }\n    renderBoard() {\n        const cells = document.querySelectorAll(\".field-cell\");\n        let index = 0;\n        for(let row = 0; row < 4; row++)for(let col = 0; col < 4; col++){\n            const cell = cells[index];\n            cell.classList = \"field-cell\";\n            const value = this.grid[row][col];\n            if (value !== 0) {\n                cell.classList.add(`field-cell--${value}`);\n                cell.textContent = value;\n            } else cell.textContent = \"\";\n            index++;\n        }\n    }\n    filterZero(row) {\n        return row.filter((num)=>num !== 0); // create a new array without zeroes\n    }\n    move(row) {\n        let newRow = this.filterZero([\n            ...row\n        ]);\n        // Обробляємо злиття плиток\n        for(let i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n            newRow[i] *= 2; // Об'єднуємо плитки\n            newRow[i + 1] = 0; // Очищаємо наступну плитку\n            this.score += newRow[i]; // Додаємо значення до рахунку\n        }\n        // Після злиття знову позбавляємось нулів\n        newRow = this.filterZero(newRow);\n        // Заповнюємо нулями до 4 елементів\n        while(newRow.length < 4)newRow.push(0);\n        return newRow;\n    }\n    moveLeft() {\n        let moved = false;\n        for(let r = 0; r < 4; r++){\n            let row = this.grid[r];\n            const originalRow = [\n                ...row\n            ];\n            row = this.move(row);\n            if (JSON.stringify(originalRow) !== JSON.stringify(row)) moved = true;\n            this.grid[r] = row;\n        }\n        if (moved) this.addRandomTile();\n        this.checkWin();\n        this.checkLose();\n        this.renderBoard();\n        this.updateScore();\n    }\n    moveRight() {\n        let moved = false;\n        for(let r = 0; r < 4; r++){\n            let row = this.grid[r];\n            const originalRow = [\n                ...row\n            ];\n            row.reverse();\n            row = this.move(row);\n            row.reverse();\n            if (JSON.stringify(originalRow) !== JSON.stringify(row)) moved = true;\n            this.grid[r] = row;\n        }\n        if (moved) this.addRandomTile();\n        this.checkWin();\n        this.checkLose();\n        this.renderBoard();\n        this.updateScore();\n    }\n    moveUp() {\n        let moved = false;\n        for(let c = 0; c < 4; c++){\n            let row = [\n                this.grid[0][c],\n                this.grid[1][c],\n                this.grid[2][c],\n                this.grid[3][c]\n            ];\n            const originalRow = [\n                ...row\n            ];\n            row = this.move(row);\n            if (JSON.stringify(originalRow) !== JSON.stringify(row)) moved = true;\n            this.grid[0][c] = row[0];\n            this.grid[1][c] = row[1];\n            this.grid[2][c] = row[2];\n            this.grid[3][c] = row[3];\n        }\n        if (moved) this.addRandomTile();\n        this.checkWin();\n        this.checkLose();\n        this.renderBoard();\n        this.updateScore();\n    }\n    moveDown() {\n        let moved = false;\n        for(let c = 0; c < 4; c++){\n            let row = [\n                this.grid[0][c],\n                this.grid[1][c],\n                this.grid[2][c],\n                this.grid[3][c]\n            ];\n            const originalRow = [\n                ...row\n            ];\n            row.reverse();\n            row = this.move(row);\n            row.reverse();\n            if (JSON.stringify(originalRow) !== JSON.stringify(row)) moved = true;\n            this.grid[0][c] = row[0];\n            this.grid[1][c] = row[1];\n            this.grid[2][c] = row[2];\n            this.grid[3][c] = row[3];\n        }\n        if (moved) this.addRandomTile();\n        this.checkWin();\n        this.checkLose();\n        this.renderBoard();\n        this.updateScore();\n    }\n    updateScore() {\n        const score = document.querySelector(\".game-score\");\n        score.textContent = this.score;\n    }\n    checkWin() {\n        for(let row = 0; row < 4; row++){\n            for(let col = 0; col < 4; col++)if (this.grid[row][col] === 2048) {\n                document.querySelector(\".message.message-win\").classList.remove(\"hidden\");\n                this.status = $a5fd07fa01589658$var$Game.gameStatus.win;\n                return true;\n            }\n        }\n        return false;\n    }\n    checkLose() {\n        if (this.status === $a5fd07fa01589658$var$Game.gameStatus.lose) return true;\n        for(let row = 0; row < 4; row++)for(let col = 0; col < 4; col++){\n            if (this.grid[row][col] === 0) return false;\n            if (col < 3 && this.grid[row][col] === this.grid[row][col + 1]) return false;\n            if (row < 3 && this.grid[row][col] === this.grid[row + 1][col]) return false;\n        }\n        document.querySelector(\".message.message-lose\").classList.remove(\"hidden\");\n        this.status = $a5fd07fa01589658$var$Game.gameStatus.lose;\n        return true;\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\n// Write your code here\nconst $09e991522ca7e64e$var$startButton = document.querySelector(\".button.start\");\nconst $09e991522ca7e64e$var$start = document.querySelector(\".message.message-start\");\nconst $09e991522ca7e64e$var$win = document.querySelector(\".message.message-win\");\nconst $09e991522ca7e64e$var$lose = document.querySelector(\".message.message-lose\");\n$09e991522ca7e64e$var$startButton.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$game.getStatus() === $a5fd07fa01589658$exports.gameStatus.idle || $09e991522ca7e64e$var$game.getStatus() === $a5fd07fa01589658$exports.gameStatus.lose) {\n        $09e991522ca7e64e$var$game.start();\n        $09e991522ca7e64e$var$start.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$startButton.textContent = \"Restart\";\n        $09e991522ca7e64e$var$startButton.classList.remove(\"start\");\n        $09e991522ca7e64e$var$startButton.classList.add(\"restart\");\n    } else {\n        $09e991522ca7e64e$var$game.restart();\n        $09e991522ca7e64e$var$start.classList.remove(\"hidden\");\n        $09e991522ca7e64e$var$win.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$lose.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$game.score = 0;\n        $09e991522ca7e64e$var$game.updateScore();\n        $09e991522ca7e64e$var$startButton.textContent = \"Start\";\n        $09e991522ca7e64e$var$startButton.classList.remove(\"restart\");\n        $09e991522ca7e64e$var$startButton.classList.add(\"start\");\n    }\n});\ndocument.addEventListener(\"keyup\", (e)=>{\n    if ($09e991522ca7e64e$var$game.getStatus() === $a5fd07fa01589658$exports.gameStatus.playing) {\n        if (e.code === \"ArrowLeft\") $09e991522ca7e64e$var$game.moveLeft();\n        if (e.code === \"ArrowRight\") $09e991522ca7e64e$var$game.moveRight();\n        if (e.code === \"ArrowUp\") $09e991522ca7e64e$var$game.moveUp();\n        if (e.code === \"ArrowDown\") $09e991522ca7e64e$var$game.moveDown();\n    }\n});\n\n\n//# sourceMappingURL=index.d8890975.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\n// Write your code here\nconst startButton = document.querySelector('.button.start');\nconst start = document.querySelector('.message.message-start');\nconst win = document.querySelector('.message.message-win');\nconst lose = document.querySelector('.message.message-lose');\n\nstartButton.addEventListener('click', () => {\n  if (\n    game.getStatus() === Game.gameStatus.idle ||\n    game.getStatus() === Game.gameStatus.lose\n  ) {\n    game.start();\n    start.classList.add('hidden');\n\n    startButton.textContent = 'Restart';\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n  } else {\n    game.restart();\n    start.classList.remove('hidden');\n    win.classList.add('hidden');\n    lose.classList.add('hidden');\n    game.score = 0;\n    game.updateScore();\n    startButton.textContent = 'Start';\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n  }\n});\n\ndocument.addEventListener('keyup', (e) => {\n  if (game.getStatus() === Game.gameStatus.playing) {\n    if (e.code === 'ArrowLeft') {\n      game.moveLeft();\n    }\n\n    if (e.code === 'ArrowRight') {\n      game.moveRight();\n    }\n\n    if (e.code === 'ArrowUp') {\n      game.moveUp();\n    }\n\n    if (e.code === 'ArrowDown') {\n      game.moveDown();\n    }\n  }\n});\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  static gameStatus = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.grid = initialState;\n    this.score = 0;\n    this.status = Game.gameStatus.idle;\n  }\n\n  getState() {\n    return this.grid;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.gameStatus.playing;\n    this.addRandomTile();\n    this.addRandomTile();\n    this.renderBoard();\n  }\n\n  restart() {\n    this.grid = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.score = 0;\n    this.status = Game.gameStatus.idle;\n    this.renderBoard();\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.grid[row][col] === 0) {\n          emptyCells.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n    const { row: randomRow, col: randomCol } = emptyCells[randomIndex];\n\n    const randomValue = Math.random();\n\n    if (randomValue < 0.9) {\n      this.grid[randomRow][randomCol] = 2;\n    } else {\n      this.grid[randomRow][randomCol] = 4;\n    }\n  }\n\n  renderBoard() {\n    const cells = document.querySelectorAll('.field-cell');\n    let index = 0;\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const cell = cells[index];\n\n        cell.classList = 'field-cell';\n\n        const value = this.grid[row][col];\n\n        if (value !== 0) {\n          cell.classList.add(`field-cell--${value}`);\n          cell.textContent = value;\n        } else {\n          cell.textContent = '';\n        }\n\n        index++;\n      }\n    }\n  }\n\n  filterZero(row) {\n    return row.filter((num) => num !== 0); // create a new array without zeroes\n  }\n\n  move(row) {\n    let newRow = this.filterZero([...row]);\n\n    // Обробляємо злиття плиток\n    for (let i = 0; i < newRow.length - 1; i++) {\n      if (newRow[i] === newRow[i + 1]) {\n        newRow[i] *= 2; // Об'єднуємо плитки\n        newRow[i + 1] = 0; // Очищаємо наступну плитку\n        this.score += newRow[i]; // Додаємо значення до рахунку\n      }\n    }\n\n    // Після злиття знову позбавляємось нулів\n    newRow = this.filterZero(newRow);\n\n    // Заповнюємо нулями до 4 елементів\n    while (newRow.length < 4) {\n      newRow.push(0);\n    }\n\n    return newRow;\n  }\n\n  moveLeft() {\n    let moved = false;\n\n    for (let r = 0; r < 4; r++) {\n      let row = this.grid[r];\n      const originalRow = [...row];\n\n      row = this.move(row);\n\n      if (JSON.stringify(originalRow) !== JSON.stringify(row)) {\n        moved = true;\n      }\n\n      this.grid[r] = row;\n    }\n\n    if (moved) {\n      this.addRandomTile();\n    }\n    this.checkWin();\n    this.checkLose();\n    this.renderBoard();\n    this.updateScore();\n  }\n\n  moveRight() {\n    let moved = false;\n\n    for (let r = 0; r < 4; r++) {\n      let row = this.grid[r];\n      const originalRow = [...row];\n\n      row.reverse();\n      row = this.move(row);\n      row.reverse();\n\n      if (JSON.stringify(originalRow) !== JSON.stringify(row)) {\n        moved = true;\n      }\n\n      this.grid[r] = row;\n    }\n\n    if (moved) {\n      this.addRandomTile();\n    }\n    this.checkWin();\n    this.checkLose();\n    this.renderBoard();\n    this.updateScore();\n  }\n\n  moveUp() {\n    let moved = false;\n\n    for (let c = 0; c < 4; c++) {\n      let row = [\n        this.grid[0][c],\n        this.grid[1][c],\n        this.grid[2][c],\n        this.grid[3][c],\n      ];\n      const originalRow = [...row];\n\n      row = this.move(row);\n\n      if (JSON.stringify(originalRow) !== JSON.stringify(row)) {\n        moved = true;\n      }\n      this.grid[0][c] = row[0];\n      this.grid[1][c] = row[1];\n      this.grid[2][c] = row[2];\n      this.grid[3][c] = row[3];\n    }\n\n    if (moved) {\n      this.addRandomTile();\n    }\n    this.checkWin();\n    this.checkLose();\n    this.renderBoard();\n    this.updateScore();\n  }\n\n  moveDown() {\n    let moved = false;\n\n    for (let c = 0; c < 4; c++) {\n      let row = [\n        this.grid[0][c],\n        this.grid[1][c],\n        this.grid[2][c],\n        this.grid[3][c],\n      ];\n      const originalRow = [...row];\n\n      row.reverse();\n      row = this.move(row);\n      row.reverse();\n\n      if (JSON.stringify(originalRow) !== JSON.stringify(row)) {\n        moved = true;\n      }\n      this.grid[0][c] = row[0];\n      this.grid[1][c] = row[1];\n      this.grid[2][c] = row[2];\n      this.grid[3][c] = row[3];\n    }\n\n    if (moved) {\n      this.addRandomTile();\n    }\n    this.checkWin();\n    this.checkLose();\n    this.renderBoard();\n    this.updateScore();\n  }\n\n  updateScore() {\n    const score = document.querySelector('.game-score');\n\n    score.textContent = this.score;\n  }\n\n  checkWin() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.grid[row][col] === 2048) {\n          document\n            .querySelector('.message.message-win')\n            .classList.remove('hidden');\n          this.status = Game.gameStatus.win;\n\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  checkLose() {\n    if (this.status === Game.gameStatus.lose) {\n      return true;\n    }\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.grid[row][col] === 0) {\n          return false;\n        }\n\n        if (col < 3 && this.grid[row][col] === this.grid[row][col + 1]) {\n          return false;\n        }\n\n        if (row < 3 && this.grid[row][col] === this.grid[row + 1][col]) {\n          return false;\n        }\n      }\n    }\n\n    document.querySelector('.message.message-lose').classList.remove('hidden');\n    this.status = Game.gameStatus.lose;\n\n    return true;\n  }\n}\n\nmodule.exports = Game;\n"],"names":["$a5fd07fa01589658$exports","$a5fd07fa01589658$var$Game","gameStatus","idle","playing","win","lose","constructor","initialState","grid","score","status","getState","getScore","getStatus","start","addRandomTile","renderBoard","restart","emptyCells","row","col","push","length","randomIndex","Math","floor","random","randomRow","randomCol","randomValue","cells","document","querySelectorAll","index","cell","classList","value","add","textContent","filterZero","filter","num","move","newRow","i","moveLeft","moved","r","originalRow","JSON","stringify","checkWin","checkLose","updateScore","moveRight","reverse","moveUp","c","moveDown","querySelector","remove","$09e991522ca7e64e$var$game","$09e991522ca7e64e$var$startButton","$09e991522ca7e64e$var$start","$09e991522ca7e64e$var$win","$09e991522ca7e64e$var$lose","addEventListener","e","code"],"version":3,"file":"index.d8890975.js.map"}